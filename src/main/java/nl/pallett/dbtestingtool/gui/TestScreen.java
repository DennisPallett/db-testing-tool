/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package nl.pallett.dbtestingtool.gui;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Observable;
import java.util.Observer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.text.DefaultCaret;
import nl.pallett.dbtestingtool.Database;
import nl.pallett.dbtestingtool.PostgresDb;
import nl.pallett.dbtestingtool.TestSet;
import nl.pallett.dbtestingtool.TestRunner;

/**
 *
 * @author Dennis
 */
public class TestScreen extends javax.swing.JFrame implements Observer {
    protected TestRunner testRunner;
    
    protected Thread testThread;
    
    protected Timer timer;
    protected Thread timerThread;
    
    /**
     * Creates new form TestScreen
     */
    public TestScreen(TestRunner testRunner) {
        initComponents();
        
        setLocationRelativeTo(null); 
        
        // auto-scroll log to bottom
        DefaultCaret caret = (DefaultCaret)txtLog.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        
        this.testRunner = testRunner;
        testRunner.addObserver(this);
        
        Database database = testRunner.getDatabase();
        this.setTitle("Running tests on " + database.toString() + "/" + database.getTable());
        
        logMessage("Initializing testrunner...");
        
        // determine total number of sets/queries
        int setCount = testRunner.getSetCount();
        lblSetCount.setText(String.valueOf(setCount));
        logMessage("Determined total number of sets: " + setCount);
        
        int queryCount = testRunner.getQueryCount();
        lblQueryCount.setText(String.valueOf(queryCount));
        progressbar.setMaximum(queryCount);
        logMessage("Determined total number of queries: " + queryCount);

        timer = new Timer(testRunner, this.lblTotalRunTime, this.lblCurrTime);
        testRunner.addObserver(timer);
        
        logMessage("Finished initialization");
        testThread = new Thread(testRunner);
        testThread.start();

        timerThread = new Thread(timer);
        timerThread.start();
    }
    
    public static void main (String[] args) {
        ArrayList<TestSet> querySetList = new ArrayList<TestSet>();
        TestSet querySet = new TestSet();
        try {
            querySet.loadFile("D:\\University\\Afstuderen\\Data\\pegel_andelfingen\\testqueries-10k.xml");
        } catch (Exception ex) {
            Logger.getLogger(TestScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        querySetList.add(querySet);
        
        Database database = new PostgresDb();
        database.setName("test");
        database.setHost("localhost");
        database.setUser("postgres");
        database.setPassword("sa");
        database.setTable("pegel_andelfingen_10k");
        
        ArrayList<Integer> groupList = new ArrayList<Integer>();
        groupList.add(1);
        groupList.add(10);
        groupList.add(100);
        
        TestRunner testRunner = new TestRunner();
        testRunner.setTestSetList(querySetList);
        testRunner.setGroupList(groupList);
        testRunner.setDatabase(database);
        testRunner.setQueryCountPerSet(3);
        testRunner.setTimeout(300);
        testRunner.setResultsDir(new File("D:\\Downloads"));
        
        TestScreen testScreen = new TestScreen(testRunner);
        testScreen.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        progressbar = new javax.swing.JProgressBar();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblSetCount = new javax.swing.JLabel();
        lblSetsFinished = new javax.swing.JLabel();
        lblQueryCount = new javax.swing.JLabel();
        lblQueriesFinished = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblTotalRunTime = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblCurrRows = new javax.swing.JLabel();
        lblCurrSet = new javax.swing.JLabel();
        lblCurrQueryId = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lblCurrTime = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblCurrTestSet = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        lblCurrGroup = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        btnExit = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Running tests");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Running tests");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Progress ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel2.setText("Total number of queries:");

        jLabel3.setText("Queries finished: ");

        jLabel4.setText("Total number of sets:");

        jLabel5.setText("Sets finished:");

        lblSetCount.setText("n/a");

        lblSetsFinished.setText("0");

        lblQueryCount.setText("n/a");

        lblQueriesFinished.setText("0");

        jLabel6.setText("Total run time:");

        lblTotalRunTime.setText("0 seconds");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(progressbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblTotalRunTime)
                                .addGap(0, 66, Short.MAX_VALUE))
                            .addComponent(lblSetCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblQueryCount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSetsFinished, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblQueriesFinished, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lblSetCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblSetsFinished))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblQueryCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblQueriesFinished))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblTotalRunTime))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(progressbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Current query ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel10.setText("Set:");

        jLabel11.setText("Nr. of rows:");

        jLabel12.setText("Query ID:");

        lblCurrRows.setText("n/a");

        lblCurrSet.setText("n/a");

        lblCurrQueryId.setText("n/a");

        jLabel18.setText("Run time:");

        lblCurrTime.setText("0 seconds");

        jLabel20.setText("TestSet:");

        lblCurrTestSet.setText("n/a");

        jLabel22.setText("GROUP BY:");

        lblCurrGroup.setText("n/a");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel18)
                    .addComponent(jLabel22)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCurrTestSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCurrTime, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                            .addComponent(lblCurrGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCurrQueryId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCurrRows, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCurrSet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 28, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(lblCurrTestSet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lblCurrSet))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lblCurrRows))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(lblCurrQueryId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(lblCurrGroup))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCurrTime)
                    .addComponent(jLabel18))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, " Activity log ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        txtLog.setEditable(false);
        txtLog.setColumns(20);
        txtLog.setRows(5);
        jScrollPane1.setViewportView(txtLog);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
        );

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jButton2.setText("Pause testing");
        jButton2.setEnabled(false);

        jButton3.setText("Cancel current query");
        jButton3.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnExit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExit)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        this.dispose();
        System.exit(1);
    }//GEN-LAST:event_btnExitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExit;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCurrGroup;
    private javax.swing.JLabel lblCurrQueryId;
    private javax.swing.JLabel lblCurrRows;
    private javax.swing.JLabel lblCurrSet;
    private javax.swing.JLabel lblCurrTestSet;
    private javax.swing.JLabel lblCurrTime;
    private javax.swing.JLabel lblQueriesFinished;
    private javax.swing.JLabel lblQueryCount;
    private javax.swing.JLabel lblSetCount;
    private javax.swing.JLabel lblSetsFinished;
    private javax.swing.JLabel lblTotalRunTime;
    private javax.swing.JProgressBar progressbar;
    private javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables

    public void logMessage(String msg) {
        String timestamp = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
        
        StringBuilder buffer = new StringBuilder();
        buffer.append(" [");
        buffer.append(timestamp);
        buffer.append("] ");
        
        final int maxLineSize = 70;
        final String padLeft = "                    ";
        
        String[] lines = msg.split("\n");
        boolean first = true;
        for(String line : lines) {
            if (first) {
                first = false;
            } else {
                buffer.append(padLeft);               
            }
            
            String[] words = line.split(" ");
            int lineLen = 0;
            for(String word : words) {
                if (lineLen + word.length() > maxLineSize) {
                    buffer.append("\n");
                    buffer.append(padLeft);
                    lineLen = 0;
                }
                
                buffer.append(word + " ");
                lineLen += word.length();
            }
            
            buffer.append("\n");
        }
        
        txtLog.setText(txtLog.getText() + buffer.toString());        
    }
    
    @Override
    public void update(Observable o, Object arg) {
        if (arg instanceof String) {
            logMessage((String)arg);
        }
        
        if (testRunner.getState() == TestRunner.State.FAILED) {
            logMessage("FATAL: Testrunner failed to finished");
            Exception lastException = testRunner.getLastException();
            if (lastException != null) {
                logMessage("Last exception: \n" + lastException.getMessage());
                lastException.printStackTrace();
            }
        }
               
        if (testRunner.getState() == TestRunner.State.RUNNING && testRunner.getCurrTestSet() != null) {
            this.lblCurrTestSet.setText(testRunner.getCurrTestSet().toString());
            this.lblCurrSet.setText(testRunner.getCurrQuerySet().getName());
            this.lblCurrRows.setText(String.valueOf(testRunner.getCurrQuerySet().getSize()));
            this.lblCurrQueryId.setText(String.valueOf(testRunner.getCurrQueryId()+1));
            this.lblCurrGroup.setText(String.valueOf(testRunner.getCurrGroup()));
        } else {
            this.lblCurrTestSet.setText("n/a");
            this.lblCurrSet.setText("n/a");
            this.lblCurrRows.setText("n/a");
            this.lblCurrQueryId.setText("n/a");
            this.lblCurrGroup.setText("n/a");
            this.lblCurrTime.setText("n/a");
        }
        
        this.lblQueriesFinished.setText(String.valueOf(testRunner.getQueriesFinished()));
        this.lblSetsFinished.setText(String.valueOf(testRunner.getQuerySetsFinished()));
        this.progressbar.setValue(testRunner.getQueriesFinished());
    }
    
    protected class Timer implements Runnable, Observer {
        protected TestRunner testRunner;
        
        protected int runTime = 0;
        
        protected int queryTime = 0;
        
        protected JLabel runTimeLabel;
        
        protected JLabel queryTimeLabel;
             
        public Timer (TestRunner testRunner, JLabel runTimeLabel, JLabel queryTimeLabel) {
            this.testRunner = testRunner;
            this.runTimeLabel = runTimeLabel;
            this.queryTimeLabel = queryTimeLabel;
        }
        
        @Override
        public void run() {
            while(testRunner.getState() == TestRunner.State.RUNNING) {
                runTimeLabel.setText(runTime + " seconds");
                
                if (testRunner.getCurrGroup() > 0) {
                    queryTimeLabel.setText(queryTime + " seconds");
                }
                
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException ex) {
                    // don't care
                }
                
                runTime++;
                queryTime++;
            }
        }

        @Override
        public void update(Observable o, Object arg) {
            queryTime = 0;
        }
        
    }
}
